server {
  server_name {{item.name}}.{{domain}};
  {% if ssl_mode == "selfsigned" %}
  include /etc/nginx/include.d/ssl-selfsigned.conf;
  {% elif ssl_mode == "letsencrypt" %}
  include /etc/nginx/include.d/ssl-letsencrypt.conf;
  
  # include le certificates
  ssl_certificate /etc/nginx/le/live/{{item.name}}.{{domain}}/fullchain.pem;
  ssl_certificate_key /etc/nginx/le/live/{{item.name}}.{{domain}}/privkey.pem;

  {% else %}
  listen 80;
  {% endif %}

  {% if item.auth_required %}
  error_page 403 = @error403;

  location @error403 {
      return 302 http{% if ssl_mode != "none" %}s{% endif %}://auth.{{domain}}?redirect_uri=$scheme://$http_host$request_uri;
  }

  auth_request /v1/validation;

  location = /v1/validation {
      internal;

      proxy_pass http://auth:8000;
      proxy_pass_request_body     off;
      proxy_set_header Content-Length "";
      proxy_set_header X-Original-URI $request_uri;
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
  }
  {% endif %}

  location / {
      proxy_pass http://{{item.name}}:{{item.port}};
      proxy_set_header X-Original-URI $request_uri;
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
  }
}
